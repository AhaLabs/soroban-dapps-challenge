--- 
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
  :root {
    --white: #fff;
    --shadow: #efefef;
    --black: #000;
    --bg: var(--shadow);
    --bg-prominent: var(--white);
    --fg: var(--black);
    --accent: rgb(231, 59, 147); /* pink */
    --accent-2: #A463B0; /* lilac */
		--accent-gradient: linear-gradient(45deg, var(--accent), var(--accent-2) 30%, white 60%);
    --shadow: rgba(0, 0, 0, .1);
    --light-text: #666;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --shadow: #1e1e1e;
      --bg-prominent: var(--black);
      --fg: var(--white);
    }
  }

  html {
    background: var(--bg);
    color: var(--fg);
    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu,
      Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
    line-height: 1.6;
    font-size: 22px;
  }

  body {
    padding: 0;
    margin: 0;
  }

  * {
    box-sizing: border-box;
  }

  img {
    max-width: 100%;
    display: block;
    margin: auto;
  }

  h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
  }

  a {
    color: var(--accent);
    text-decoration: none;
    border-bottom: 1px solid var(--shadow);
    transition: border-color 150ms;
  }

  a:focus,
  a:hover {
    border-bottom-color: var(--accent);
  }

	button {
		border: 1px solid var(--accent);
		background-color: var(--shadow);
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		color: white;
		cursor: pointer;
		font-size: inherit;
		padding: 0.5rem 1rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	button:is(:hover, :focus-within) {
		color: black;
		background-position: 0;
		background-size: 400%;
		background-image: var(--accent-gradient);
	}
  button:active {
    transform: translateY(1px);
  }
	button:is(:disabled) {
		color: white;
		background: var(--shadow);
		cursor: not-allowed;
	}
	button:is(:disabled).loading {
		background: linear-gradient(-45deg, #ffffff44, #ffffff22);
		background-size: 200%;
		animation: loading-gradient 4s linear infinite;
	}
	@keyframes loading-gradient {
		0% {
			background-position: 0% 50%;
		}
		100% {
			background-position: -200% 50%;
		}
	}
	.visually-hidden {
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		height: 1px;
		overflow: hidden;
		position: absolute;
		white-space: nowrap;
		width: 1px;
	}

  .container {
    max-width: 38rem;
    padding: 0 1rem;
    margin-left: auto;
    margin-right: auto;
  }

  .ifSignedIn,
  .ifSignedOut {
    display: none;
    opacity: 0;
    transition: opacity 150ms ease-in-out;
  }
</style>
  
