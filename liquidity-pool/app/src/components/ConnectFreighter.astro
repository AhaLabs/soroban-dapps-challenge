<div id="freighter-wrap" class="wrap" aria-live="polite">
  <div style="display: none" data-freighter-ellipsis class="ellipsis transparent"></div>
  <button style="display: none" class="transparent" data-connect aria-controls="freighter-wrap">Connect</button>
</div>

<style>
  .wrap {
    text-align: center;
    font-size: 0.8em;
    height: 44px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .ellipsis {
    margin: auto;
    max-width: 12em;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;
    white-space: nowrap;
  }

  .transparent {
    opacity: 0;
    transition: opacity 150ms ease-in-out;
  }
</style>

<script>
  import { isAllowed, setAllowed, getUserInfo } from '@stellar/freighter-api';

  const wrap = document.querySelector('#freighter-wrap');
  const button = document.querySelector('[data-connect]');
  const ellipsis = document.querySelector('[data-freighter-ellipsis]');

  async function getPk() {
    const { publicKey } = await getUserInfo();
    return publicKey;
  }

  async function setLoggedIn() {
    const publicKey = await getPk();
    ellipsis.innerHTML = `Signed in as ${publicKey}`;
    ellipsis.title = publicKey;
    ellipsis.style.display = 'block';
    setTimeout(() => {
      ellipsis.style.opacity = '1';
    }, 1);
  }

  if (await isAllowed()) {
    if (await getPk()) setLoggedIn();
    else wrap.innerHTML = 'Freighter is locked.<br>Sign in & refresh the page.';
  } else {
    button.style.display = 'block';
    setTimeout(() => {
      button.style.opacity = '1';
    }, 1);
    button.addEventListener('click', async () => {
      button.disabled = true;
      await setAllowed();
      await setLoggedIn();
    });
  }
</script>
